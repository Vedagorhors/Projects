let counter = -5;
console.log(counter);
console.log('+', 2 + 2);
console.log('-', 10 - 5);
console.log('**', 2 ** 3); // возведение в степень. Выведет 8
console.log('%', 10 % 3); // остаток от целочисленного деления. выведет 1
console.log('%', 8 % 3); // остаток от целочисленного деления. выведет 2

// Инкремент и декремент

let capsOfCoffee = 3; 
//capsOfCoffee = capsOfCoffee + 1; // // аналогично выражению ниже
// capsOfCoffee = capsOfCoffee + 1; // выведет 4, если будем выводить в консоль
// Сложение с присвоением +=  Сначала прибавляет и потом переменной присваивает результат
// capsOfCoffee += 1; // прибавляем 1 и присваиваем переменной результат прибавления 1, то есть результат 4
// console.log('capsOfCoffee', capsOfCoffee);
// с помощью подобной конструкции мы можем и вычитать -=, делить /=, умножать *=, возводить в степень **=, остаток от деления %= 

// capsOfCoffee = capsOfCoffee - 1; // // аналогично выражению ниже
// capsOfCoffee -= 1; // вычитаем 1 и присваиваем переменной результат вычитания, то есть 2

// Инкремент и декремент. Такие конструкции позволяют максимально короткой записью прибавить / вычесть единицу в переменную
// capsOfCoffee++; // к переменной добавили 1
// ++capsOfCoffee; // 
// a++ возвращает значение a до увеличения на 1
// ++a возвращает значение a после увеличения на 1


//console.log('1', capsOfCoffee++); // выведет 3. Данная запись (когда ++ в конце) возвращает исходное значение, то есть 3.
console.log('2', ++capsOfCoffee); // Выведет 4. Данная запись возращает уже увеличенное на 1 значение. То есть сначала прибавляет 1, а потом присваиват новое значение переменной

//let value = 5;

//value = value * 5; // умножаем 5 * 5. Выведет 25
//value *= 5; // запись идентична верхней, то есть 5 * 5 и присваиваем переменной результат 25

let value = 10;
value = value / 2;
value /= 2; // 10 делим на 2 и переменной присваимваем результат 5. Запись эквивалентна записи выше 
console.log('value', value); // выведет 5

